package se.uu.ub.cora.spider.record;

import java.util.Collection;

import se.uu.ub.cora.metadataformat.data.DataAtomic;
import se.uu.ub.cora.metadataformat.data.DataGroup;
import se.uu.ub.cora.spider.record.storage.RecordStorage;

public class RecordStorageCreateUpdateSpy implements RecordStorage {

	public DataGroup createRecord;
	public DataGroup updateRecord;

	@Override
	public DataGroup read(String type, String id) {
		if (type.equals("recordType") && id.equals("typeWithAutoGeneratedId")) {
			DataGroup group = DataGroup.withNameInData("recordType");
			group.addChild(DataAtomic.withNameInDataAndValue("newMetadataId", "placeNew"));
			group.addChild(DataAtomic.withNameInDataAndValue("metadataId", "place"));
			group.addChild(DataAtomic.withNameInDataAndValue("userSuppliedId", "false"));
			group.addChild(DataAtomic.withNameInDataAndValue("abstract", "false"));

			return group;
		}
		if (type.equals("recordType") && id.equals("typeWithUserGeneratedId")) {
			DataGroup group = DataGroup.withNameInData("recordType");
			group.addChild(DataAtomic.withNameInDataAndValue("newMetadataId", "placeNew"));
			group.addChild(DataAtomic.withNameInDataAndValue("metadataId", "place"));
			group.addChild(DataAtomic.withNameInDataAndValue("userSuppliedId", "true"));
			group.addChild(DataAtomic.withNameInDataAndValue("abstract", "false"));
			return group;
		}
		if (type.equals("typeWithUserGeneratedId") && id.equals("uppsalaRecord1")) {
			DataGroup group = DataGroup.withNameInData("typeWithUserGeneratedId");
			group.addChild(DataAtomic.withNameInDataAndValue("newMetadataId", "placeNew"));
			group.addChild(DataAtomic.withNameInDataAndValue("metadataId", "place"));
			group.addChild(DataAtomic.withNameInDataAndValue("userSuppliedId", "true"));
			group.addChild(DataAtomic.withNameInDataAndValue("abstract", "false"));
			group.addChild(DataAtomic.withNameInDataAndValue("unit", "Uppsala"));
			return group;
		}
		if (type.equals("typeWithUserGeneratedId") && id.equals("gothenburgRecord1")) {
			DataGroup group = DataGroup.withNameInData("typeWithUserGeneratedId");
			group.addChild(DataAtomic.withNameInDataAndValue("newMetadataId", "placeNew"));
			group.addChild(DataAtomic.withNameInDataAndValue("metadataId", "place"));
			group.addChild(DataAtomic.withNameInDataAndValue("userSuppliedId", "true"));
			group.addChild(DataAtomic.withNameInDataAndValue("abstract", "false"));
			group.addChild(DataAtomic.withNameInDataAndValue("unit", "gothenburg"));
			return group;
		}
		return null;
	}

	@Override
	public void create(String type, String id, DataGroup record, DataGroup linkList) {
		createRecord = record;
	}

	@Override
	public void deleteByTypeAndId(String type, String id) {
		// TODO Auto-generated method stub

	}

	@Override
	public void update(String type, String id, DataGroup record) {
		updateRecord = record;
	}

	@Override
	public Collection<DataGroup> readList(String type) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public DataGroup readLinkList(String type, String id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public DataGroup generateLinkCollectionPointingToRecord(String type, String id) {
		// TODO Auto-generated method stub
		return null;
	}

}
